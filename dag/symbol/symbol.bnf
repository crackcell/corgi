/* Lexical part */

_digit : '0'-'9' ;

_letter : 'a'-'z' | 'A'-'Z' ;

_idchar : _letter | _digit | '_' ;

int64 : '1'-'9' {_digit} ;

_datechar : 'Y' | 'M' | 'D' | 'h' | 'm' | 's' | ' ' | ':' | '-' ;

date : {_datechar} ;

id : {_letter | '_'} {_idchar} ;

!whitespace : ' ' | '\t' | '\n' | '\r' ;

/* Syntax part */

<<
import(
  "github.com/crackcell/hpipe/dag/symbol/token"
  "github.com/crackcell/hpipe/dag/symbol/ast"
)
>>

Expr
  : Expr "+" Term << ast.NewOperator($0, "+", $2) >>
  | Expr "-" Term << ast.NewOperator($0, "-", $2) >>
  | Term
  ;

Term
  : Term "*" Factor << ast.NewOperator($0, "*", $2) >>
  | Term "/" Factor << ast.NewOperator($0, "/", $2) >>
  | Factor
  ;

Factor
  : "(" Expr ")" << $1, nil >>
  | int64        << ast.NewInt64FromParser(string($0.(*token.Token).Lit)) >>
  | Variable
  ;

Variable
	: "${" date "}" << ast.NewBuiltinVarFromParser(string($1.(*token.Token).Lit)) >>
	| "$" id        << ast.NewVarFromParser(string($1.(*token.Token).Lit)) >>
  ;
