/* Lexical part */

_digit : '0'-'9' ;

_letter : 'a'-'z' | 'A'-'Z' | '.' ;

_idcar : _letter | _digit | '_' ;

int64 : '1'-'9' {_digit} ;

string : '"' {_idcar}  '"' ;

id : {_letter | '_'} {_idcar} ;

!whitespace : ' ' | '\t' | '\n' | '\r' ;

/* Syntax part */

<<
import (
	"../token"
	"../ast"
)
>>

StmtList
	: Stmt              << ast.NewStmtList($0) >>
	| StmtList ";" Stmt << ast.AppendStmtList($0, $2) >>
	;


Stmt
	: id "=" Expr << ast.NewOperator(ast.NewLeftID(string($0.(*token.Token).Lit)), "=", $2) >>
	;

Expr
	: Expr "+" Term << ast.NewOperator($0, "+", $2) >>
	| Expr "-" Term << ast.NewOperator($0, "-", $2) >>
	| Term
	;

Term
	: Term "*" Factor << ast.NewOperator($0, "*", $2) >>
	| Term "/" Factor << ast.NewOperator($0, "/", $2) >>
	| Factor          << $0, nil >>
	;

Factor
	: "(" Expr ")"  << $1, nil >>
	| string        << ast.NewValueFromParser(string($0.(*token.Token).Lit)) >>
	| int64         << ast.NewInt64FromParser(string($0.(*token.Token).Lit)) >>
	| id            << ast.NewRightID(string($0.(*token.Token).Lit)), nil >>
	;
